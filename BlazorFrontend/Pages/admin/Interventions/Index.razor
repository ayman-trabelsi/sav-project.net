@page "/admin/interventions"
@using Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Interventions</h3>

<p>
    <NavLink href="/admin/interventions/create" class="btn btn-primary">Create New</NavLink>
</p>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else if (interventions == null || !interventions.Any())
{
    <p>No interventions found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Description</th>
                <th>Article</th>
                <th>Technicien</th>
                <th>Garantie</th>
                <th>Montant</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var intervention in interventions)
            {
                <tr>
                    <td>@intervention.DateIntervention.ToShortDateString()</td>
                    <td>@intervention.Description</td>
                    <td>@(intervention.Reclamation?.article?.Libelle ?? "-")</td>
                    <td>@(intervention.Technicien?.Nom ?? "-")</td>
                    <td>
                        @if (intervention.Reclamation?.article?.EstSousGarantie == true)
                        {
                            <span class="badge bg-success">Sous garantie</span>
                        }
                        else
                        {
                            <span class="badge bg-warning">Hors garantie</span>
                        }
                    </td>
                    <td>
                        @if (intervention.Reclamation?.article?.EstSousGarantie == true)
                        {
                            <span class="text-success">Gratuit</span>
                        }
                        else
                        {
                            @intervention.MontantFacture.ToString("C")
                        }
                    </td>
                    <td>
                        <NavLink href="@($"/admin/interventions/edit/{intervention.Id}")" class="btn btn-info btn-sm">Edit</NavLink>
                        <NavLink href="@($"/admin/interventions/details/{intervention.Id}")" class="btn btn-primary btn-sm">Details</NavLink>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteIntervention(intervention.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Intervention>? interventions;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            interventions = await Http.GetFromJsonAsync<List<Intervention>>("api/interventions");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading interventions: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private async Task DeleteIntervention(int id)
    {
        var response = await Http.DeleteAsync($"api/interventions/{id}");
        if (response.IsSuccessStatusCode)
        {
            interventions = await Http.GetFromJsonAsync<List<Intervention>>("api/interventions");
        }
    }
} 