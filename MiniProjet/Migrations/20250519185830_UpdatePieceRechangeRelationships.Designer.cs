// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProjet.Context;

#nullable disable

namespace MiniProjet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519185830_UpdatePieceRechangeRelationships")]
    partial class UpdatePieceRechangeRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EstSousGarantie")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Shared.Models.Etat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Etats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "En Attente"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Traité"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "En Cours"
                        });
                });

            modelBuilder.Entity("Shared.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateIntervention")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantFacture")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prix")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReclamationId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechnicienId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("Shared.Models.PieceRechange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("PiecesRechange");
                });

            modelBuilder.Entity("Shared.Models.Reclamation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReclamation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtatId")
                        .HasColumnType("int");

                    b.Property<int?>("InterventionId")
                        .HasColumnType("int");

                    b.Property<int>("idArticleReclamation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EtatId");

                    b.HasIndex("InterventionId")
                        .IsUnique()
                        .HasFilter("[InterventionId] IS NOT NULL");

                    b.HasIndex("idArticleReclamation");

                    b.ToTable("Reclamations");
                });

            modelBuilder.Entity("Shared.Models.Technicien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Techniciens");
                });

            modelBuilder.Entity("Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Shared.Models.Client", b =>
                {
                    b.HasBaseType("Shared.Models.User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("Shared.Models.ResponsableSAV", b =>
                {
                    b.HasBaseType("Shared.Models.User");

                    b.HasDiscriminator().HasValue("ResponsableSAV");
                });

            modelBuilder.Entity("Shared.Models.Intervention", b =>
                {
                    b.HasOne("Shared.Models.Technicien", "Technicien")
                        .WithMany("Interventions")
                        .HasForeignKey("TechnicienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Technicien");
                });

            modelBuilder.Entity("Shared.Models.PieceRechange", b =>
                {
                    b.HasOne("Shared.Models.Article", "Article")
                        .WithMany("PiecesRechanges")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Shared.Models.Reclamation", b =>
                {
                    b.HasOne("Shared.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Shared.Models.Etat", "Etat")
                        .WithMany()
                        .HasForeignKey("EtatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Shared.Models.Intervention", "Intervention")
                        .WithOne("Reclamation")
                        .HasForeignKey("Shared.Models.Reclamation", "InterventionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Shared.Models.Article", "article")
                        .WithMany()
                        .HasForeignKey("idArticleReclamation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Etat");

                    b.Navigation("Intervention");

                    b.Navigation("article");
                });

            modelBuilder.Entity("Shared.Models.Article", b =>
                {
                    b.Navigation("PiecesRechanges");
                });

            modelBuilder.Entity("Shared.Models.Intervention", b =>
                {
                    b.Navigation("Reclamation");
                });

            modelBuilder.Entity("Shared.Models.Technicien", b =>
                {
                    b.Navigation("Interventions");
                });
#pragma warning restore 612, 618
        }
    }
}
